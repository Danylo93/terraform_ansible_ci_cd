name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do Código
        uses: actions/checkout@v2

      - name: Configurar Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Cache do Diretório do Terraform
        uses: actions/cache@v2
        with:
          path: terraform/.terraform
          key: ${{ runner.os }}-terraform-${{ hashFiles('terraform/*.tf') }}
          restore-keys: |
            ${{ runner.os }}-terraform-

      - name: Instalar Dependências
        run: |
          sudo apt-get update
          sudo apt-get install -y jq ansible

      - name: Inicializar Terraform
        run: cd terraform && terraform init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Executar Plano do Terraform
        run: cd terraform && terraform plan -out=tfplan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do Código
        uses: actions/checkout@v2

      - name: Aplicar Terraform
        if: github.ref == 'refs/heads/main'
        run: |
          cd terraform
          terraform apply -auto-approve tfplan

      - name: Obter Outputs do Terraform
        run: |
          instance_ip=$(terraform output -raw instance_ip)
          if [ -z "$instance_ip" ]; then
            echo "IP da instância não encontrado na saída do Terraform"
            exit 1
          fi
          echo "INSTANCE_IP=$instance_ip" >> $GITHUB_ENV

      - name: Atualizar Hosts do Ansible
        run: |
          instance_ip="${{ env.INSTANCE_IP }}"
          if [ -z "$instance_ip" ]; then
            echo "IP da instância não encontrado na saída do Terraform"
            exit 1
          fi
          echo "[maquina_wp]" > ansible/hosts
          echo "$instance_ip" >> ansible/hosts

      - name: Executar Playbook do Ansible
        run: |
          ansible-playbook -i ansible/hosts ansible/provisionar.yml
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
