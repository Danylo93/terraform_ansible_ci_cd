name: CI/CD Pipeline

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Cache Terraform Directory
      uses: actions/cache@v2
      with:
        path: terraform/.terraform
        key: ${{ runner.os }}-terraform-${{ hashFiles('**/*.tf') }}
        restore-keys: |
          ${{ runner.os }}-terraform-

    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y jq ansible

    - name: Terraform Init
      run: cd terraform && terraform init

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Terraform Plan
      run: cd terraform && terraform plan -out=tfplan

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main'
      run: |
        cd terraform
        terraform apply -auto-approve tfplan
        terraform output -json > tf_output.json || echo '{}' > tf_output.json

    - name: Generate Terraform Output
      run: |
        cd terraform
        terraform output -json > tf_output.json

    - name: Get Terraform Output
      id: terraform_output
      run: |
        cat terraform/tf_output.json  # Verificar conteÃºdo para debug
        instance_ip=$(jq -r '.instance_ip.value' terraform/tf_output.json)
        echo "[maquina_wp]" > ansible/hosts
        echo "$instance_ip" >> ansible/hosts


    - name: Update Ansible Hosts
      run: |
        instance_ip=$(jq -r '.instance_ip.value' terraform/tf_output.json)
        echo "[maquina_wp]" > ansible/hosts
        echo "$instance_ip" >> ansible/hosts

    - name: Run Ansible Playbook
      run: ansible-playbook -i ansible/hosts ansible/provisionar.yml
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
